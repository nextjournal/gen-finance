(ns lectures.intro)

;; # Welcome!
;;
;; Hello!

;; -*- coding: utf-8 -*-
;; ---
;; jupyter:
;;   jupytext:
;;     cell_metadata_filter: -all
;;     custom_cell_magics: kql
;;     text_representation:
;;       extension: .jl
;;       format_name: percent
;;       format_version: '1.3'
;;       jupytext_version: 1.11.2
;;   kernelspec:
;;     display_name: Julia 1.9.1
;;     language: julia
;;     name: julia-1.9
;; ---

;; %% [markdown]
;; TODO
;;
;; * Explanation of `Gen.generate`, what frequencies/weights to expect, and why they are correct ones to use in context.
;;
;; * Comment on roles of fwd/bwd proposals in SMCP3.
;; * Visualize grids somehow.
;;
;; * Color sensor reading picture lines via when unexpectedly low likelihood.
;;
;; * alternate world models for comparison with robot model.  Examples: variants of parameters
;; * plotting multiple traces: sequencing vs. tiling vs. alpha-blending (in each case indicate weights differently)
;; * label all (hyper)parameters in visualizations
;; * fix docstrings, image filenames
;; * Hierarchical (sensor) model?
;;
;; Rif comments:
;; * Correct understanding of initial pose.

;; %% [markdown]
;; ProbComp Localization Tutorial
;;
;; This notebook aims to give an introduction to probabilistic computation (ProbComp).  This term refers to a way of expressing probabilistic constructs in a computational paradigm, made precise by a probablistic programming language (PPL).  The programmer can thus encode their probabilistic intuition for solving a problem into an algorithm.  Back-end language work automates the routine but error-prone derivations.

;; %%
;; Global setup code

;; The dependencies consist of the following Juila packages.
;; using Dates: now, value as dv
;; using JSON: parsefile
;; using Plots
;; using Gen
;; using GenParticleFilters

;; Fix for Jay's Jupytext setup
;; if occursin("sharlaon", pwd()); cd("/Users/sharlaon/dev/probcomp-localization-tutorial") end

;; Ensure a location for image generation.
;; mkpath("imgs");

;; %% [markdown]
;;# The "real world"
;;
;; We assume given
;; * a map of a space, together with
;; * some clutters that sometimes unexpectedly exist in that space.
;;
;; We also assume given a description of a robot's behavior via
;; * an estimated initial pose (= position + heading), and
;; * a program of controls (= advance distance, followed by rotate heading).
;;
;; *In addition to the uncertainty in the initial pose, we are uncertain about the true execution of the motion of the robot.*
;;
;; Below, we will also introduce sensors.

;; %% [markdown]
;;## Load map and robot data
;;
;; Generally speaking, we keep general code and specific examples in separate cells, as signposted here.

;; %%
;; General code here

;; norm(v :: Vector{Float64}) = sqrt(sum(v.^2))

;; struct Segment
;;     p1 :: Vector{Float64}
;;     p2 :: Vector{Float64}
;;     dp :: Vector{Float64}
;;     Segment(p1 :: Vector{Float64}, p2 :: Vector{Float64}) = new(p1, p2, p2-p1)
;; end
;; Segment(tuple :: Tuple) = Segment(tuple...)
;; Base.show(io :: IO, s :: Segment) = print(io, "Segment($(s.p1), $(s.p2))")

;; struct Pose
;;     p  :: Vector{Float64}
;;     hd :: Float64
;;     dp :: Vector{Float64}
;;     Pose(p :: Vector{Float64}, hd :: Float64) = new(p, rem2pi(hd, RoundNearest), [cos(hd), sin(hd)])
;; end
;; Pose(p :: Vector{Float64}, dp :: Vector{Float64}) = Pose(p, atan(dp[2], dp[1]))
;; Pose(tuple :: Tuple) = Pose(tuple...)
;; Base.show(io :: IO, p :: Pose) = print(io, "Pose($(p.p), $(p.hd))")

;; step_along_pose(p :: Pose, s :: Float64) :: Vector{Float64} = p.p + s * p.dp
;; rotate_pose(p :: Pose, a :: Float64) :: Pose = Pose(p.p, p.hd + a)

;; Segment(p1 :: Pose, p2 :: Pose) = Segment(p1.p, p2.p)

;; A value `c :: Control` corresponds to the robot *first* advancing in its present direction by `c.ds`, *then* rotating by `c.dhd`.
;; struct Control
;;     ds  :: Float64
;;     dhd :: Float64
;; end
;; Control(tuple :: Tuple) = Control(tuple...)

;; function create_segments(verts :: Vector{Vector{Float64}}; loop_around=false) :: Vector{Segment}
;;                                segs = Segment.(zip(verts[1:end-1], verts[2:end]))
;;                                if loop_around; push!(segs, Segment(verts[end],verts[1])) end
;;                                return segs
;;                                end

;;                                function load_world(file_name)
;;                                data = parsefile(file_name)
;;                                walls_vec = Vector{Vector{Float64}}(data["wall_verts"])
;;                                walls = create_segments(walls_vec)
;;                                clutters_vec = Vector{Vector{Vector{Float64}}}(data["clutter_vert_groups"])
;;                                clutters = create_segments.(clutters_vec)
;;                                walls_clutters = [walls ; clutters...]
;;                                                  start = Pose(Vector{Float64}(data["start_pose"]["p"]), Float64(data["start_pose"]["hd"]))
;;                                                  controls = Vector{Control}([Control(control["ds"], control["dhd"]) for control in data["program_controls"]])
;;                                                  all_points = [walls_vec ; clutters_vec... ; [start.p]]
;;                                                                x_min = minimum(p[1] for p in all_points)
;;                                                                x_max = maximum(p[1] for p in all_points)
;;                                                                y_min = minimum(p[2] for p in all_points)
;;                                                                y_max = maximum(p[2] for p in all_points)
;;                                                                bounding_box = (x_min, x_max, y_min, y_max)
;;                                                                box_size = max(x_max - x_min, y_max - y_min)
;;                                                                center_point = [(x_min + x_max) / 2.0, (y_min + y_max) / 2.0]
;;                                                                T = length(controls)
;;                                                                return ((walls=walls, clutters=clutters, walls_clutters=walls_clutters, bounding_box=bounding_box, box_size=box_size, center_point=center_point),
;;                                                                        (start=start, controls=controls),
;;                                                                        T)
;;                                                                end;

;;                                                                %%
;;                                                                Specific example code here

;;                                                                world, robot_inputs, T = load_world("example_20_program.json");

;;                                                                %% [markdown]
;;                                                               ## Integrate a path from a starting pose and controls
;;
;;                                                                If the motion of the robot is determined in an ideal manner by the controls, then we may simply integrate to determine the resulting path.  Na√Øvely, this results in the following.

;;                                                                %%
;;                                                                """
;; Assumes
;; * `robot_inputs` contains fields: `start`, `controls`
;; """
;;                                                                function integrate_controls_unphysical(robot_inputs :: NamedTuple) :: Vector{Pose}
;;                                                                path = Vector{Pose}(undef, length(robot_inputs.controls) + 1)
;;                                                                path[1] = robot_inputs.start
;;                                                                for t in 1:length(robot_inputs.controls)
;;                                                                p = path[t].p + robot_inputs.controls[t].ds * path[t].dp
;;                                                                hd = path[t].hd + robot_inputs.controls[t].dhd
;;                                                                path[t+1] = Pose(p, hd)
;;                                                                end
;;                                                                return path
;;                                                                end;

;;                                                                %% [markdown]
;;                                                                This code has the problem that it is **unphysical**: the walls in no way constrain the robot motion.
;;
;;                                                                We employ the following simple physics: when the robot's forward step through a control comes into contact with a wall, that step is interrupted and the robot instead "bounces" a fixed distance from the point of contact in the normal direction to the wall.

;;                                                                %%
;;                                                                Return unique s, t such that p + s*u == q + t*v.
;;                                                                function solve_lines(p :: Vector{Float64}, u :: Vector{Float64}, q :: Vector{Float64}, v :: Vector{Float64}; PARALLEL_TOL=1.0e-10)
;;                                                                                       det = u[1] * v[2] - u[2] * v[1]
;;                                                                                       if abs(det) < PARALLEL_TOL
;;                                                                                       return nothing, nothing
;;                                                                                       else
;;                                                                                       s = (v[1] * (p[2]-q[2]) - v[2] * (p[1]-q[1])) / det
;;                                                                                       t = (u[2] * (q[1]-p[1]) - u[1] * (q[2]-p[2])) / det
;;                                                                                       return s, t
;;                                                                                       end
;;                                                                                       end

;;                                                                                       function distance(p :: Pose, seg :: Segment) :: Float64
;;                                                                                       s, t = solve_lines(p.p, p.dp, seg.p1, seg.dp)
;;                                                                                       Solving failed (including, by fiat, if pose is parallel to segment) iff isnothing(s).
;;                                                                                       Pose is oriented away from segment iff s < 0.
;;                                                                                       Point of intersection lies on segment (as opposed to the infinite line) iff 0 <= t <= 1.
;;                                                                                       return (isnothing(s) || s < 0. || !(0. <= t <= 1.)) ? Inf : s
;;                                                                                       end

;;                                                                                       """
;; Assumes
;; * `world_inputs` contains fields: `walls`, `bounce`
;; """
;;                                                                                       function physical_step(p1 :: Vector{Float64}, p2 :: Vector{Float64}, hd :: Float64, world_inputs :: NamedTuple) :: Pose
;;                                                                                       step_pose = Pose(p1, p2 - p1)
;;                                                                                       (s, i) = findmin(w -> distance(step_pose, w), world_inputs.walls)
;;                                                                                       if s > norm(p2 - p1)
;;                                                                                       Step succeeds without contact with walls.
;;                                                                                       return Pose(p2, hd)
;;                                                                                       else
;;                                                                                       contact_point = p1 + s * step_pose.dp
;;                                                                                       unit_tangent = world_inputs.walls[i].dp / norm(world_inputs.walls[i].dp)
;;                                                                                       unit_normal = [-unit_tangent[2], unit_tangent[1]]
;;                                                                                       Sign of 2D cross product determines orientation of bounce.
;;                                                                                       if step_pose.dp[1] * world_inputs.walls[i].dp[2] - step_pose.dp[2] * world_inputs.walls[i].dp[1] < 0.
;;                                                                                       unit_normal = -unit_normal
;;                                                                                       end
;;                                                                                       return Pose(contact_point + world_inputs.bounce * unit_normal, hd)
;;                                                                                       end
;;                                                                                       end

;;                                                                                       """
;; Assumes
;; * `robot_inputs` contains fields: `start`, `controls`
;; * `world_inputs` contains fields: `walls`, `bounce`
;; """
;;                                                                                       function integrate_controls(robot_inputs :: NamedTuple, world_inputs :: NamedTuple)
;;                                                                                       path = Vector{Pose}(undef, length(robot_inputs.controls) + 1)
;;                                                                                       path[1] = robot_inputs.start
;;                                                                                       for t in 1:length(robot_inputs.controls)
;;                                                                                       p = path[t].p + robot_inputs.controls[t].ds * path[t].dp
;;                                                                                       hd = path[t].hd + robot_inputs.controls[t].dhd
;;                                                                                       path[t+1] = physical_step(path[t].p, p, hd, world_inputs)
;;                                                                                       end
;;                                                                                       return path
;;                                                                                       end;

;;                                                                                       %%
;;                                                                                       How bouncy the walls are in this world.
;;                                                                                       world_inputs = (walls = world.walls, bounce = 0.1)

;;                                                                                       path_integrated = integrate_controls(robot_inputs, world_inputs);

;;                                                                                       %% [markdown]
;;                                                                                      ## Plot such data

;;                                                                                       %%
;;                                                                                       function plot_list!(list; label=nothing, args...)
;;                                                                                                           if isempty(list); return end
;;                                                                                                           plt = plot!(list[1]; label=label, args...)
;;                                                                                                                           for item in list[2:end]; plot!(item; label=nothing, args...) end
;;                                                                                                                           return plt
;;                                                                                                                           end

;;                                                                                                                           Plots.plot!(seg :: Segment; args...) = plot!([seg.p1[1], seg.p2[1]], [seg.p1[2], seg.p2[2]]; args...)
;;                                                                                                                                           Plots.plot!(segs :: Vector{Segment}; args...) = plot_list!(segs; args...)
;;                                                                                                                                                            Plots.plot!(seg_groups :: Vector{Vector{Segment}}; args...) = plot_list!(seg_groups; args...)

;;                                                                                                                                                                                   Plots.plot!(p :: Pose; r=0.5, args...) = plot!(Segment(p.p, step_along_pose(p, r)); arrow=true, args...)
;;                                                                                                                                                                                                 Plots.plot!(ps :: Vector{Pose}; args...) = plot_list!(ps; args...)

;;                                                                                                                                                                                                                function plot_world(world, title; label_world=false, show_clutters=false)
;;                                                                                                                                                                                                                                           border = world.box_size * (3.)/19.
;;                                                                                                                                                                                                                                           the_plot = plot(
;;                                                                                                                                                                                                                                                           size         = (500, 500),
;;                                                                                                                                                                                                                                                           aspect_ratio = :equal,
;;                                                                                                                                                                                                                                                           grid         = false,
;;                                                                                                                                                                                                                                                           xlim         = (world.bounding_box[1]-border, world.bounding_box[2]+border),
;;                                                                                                                                                                                                                                                           ylim         = (world.bounding_box[3]-border, world.bounding_box[4]+border),
;;                                                                                                                                                                                                                                                           title        = title,
;;                                                                                                                                                                                                                                                           legend       = :bottomleft)
;;                                                                                                                                                                                                                                           (walls_label, clutter_label) = label_world ? ("walls", "clutters") : (nothing, nothing)
;;                                                                                                                                                                                                                                           plot!(world.walls; c=:black, label=walls_label)
;;                                                                                                                                                                                                                                                 if show_clutters; plot!(world.clutters; c=:magenta, label=clutter_label) end
;;                                                                                                                                                                                                                                                 return the_plot
;;                                                                                                                                                                                                                                                 end;

;;                                                                                                                                                                                                                                                 %% [markdown]
;;                                                                                                                                                                                                                                                 Following this initial display of the given data, we *suppress the clutters* until much later in the notebook.

;;                                                                                                                                                                                                                                                 %%
;;                                                                                                                                                                                                                                                 the_plot = plot_world(world, "Given data", label_world=true, show_clutters=true)
;;                                                                                                                                                                                                                                                 plot!(robot_inputs.start; color=:green3, label="given start pose")
;;                                                                                                                                                                                                                                                       plot!([pose.p[1] for pose in path_integrated], [pose.p[2] for pose in path_integrated];
;;                                                                                                                                                                                                                                                             color=:green2, label="path from integrating controls", seriestype=:scatter, markersize=3, markerstrokewidth=0)
;;                                                                                                                                                                                                                                                       savefig("imgs/given_data")
;;                                                                                                                                                                                                                                                       the_plot

;;                                                                                                                                                                                                                                                       %% [markdown]
;;                                                                                                                                                                                                                                                      # Gen basics
;;
;;                                                                                                                                                                                                                                                       As said initially, we are uncertain about the true initial position and subsequent motion of the robot.  In order to reason about these, we now specify a model using `Gen`.
;;
;;                                                                                                                                                                                                                                                       Each piece of the model is declared as a *generative function* (GF).  The `Gen` library provides two DSLs for constructing GFs: the dynamic DSL using the decorator `@gen` on a function declaration, and the static DSL similarly decorated with `@gen (static)`.  The dynamic DSL allows a rather wide class of program structures, whereas the static DSL only allows those for which a certain static analysis may be performed.
;;
;;                                                                                                                                                                                                                                                       The library offers two basic constructs for use within these DSLs: primitive *distributions* such as "Bernoulli" and "normal", and the sampling operator `~`.  Recursively, GFs may sample from other GFs using `~`.

;;                                                                                                                                                                                                                                                       %% [markdown]
;;                                                                                                                                                                                                                                                      ## Components of the motion model
;;
;;                                                                                                                                                                                                                                                       We start with the two building blocks: the starting pose and individual steps of motion.

;;                                                                                                                                                                                                                                                       %%
;;                                                                                                                                                                                                                                                       """
;; Assumes
;; * `motion_settings` contains fields: `p_noise`, `hd_noise`
;; """
;;                                                                                                                                                                                                                                                       @gen (static) function start_pose_prior(start :: Pose, motion_settings :: NamedTuple) :: Pose
;;                                                                                                                                                                                                                                                       p ~ mvnormal(start.p, motion_settings.p_noise^2 * [1 0 ; 0 1])
;;                                                                                                                                                                                                                                                                                                          hd ~ normal(start.hd, motion_settings.hd_noise)
;;                                                                                                                                                                                                                                                                                                          return Pose(p, hd)
;;                                                                                                                                                                                                                                                                                                          end

;;                                                                                                                                                                                                                                                                                                          """
;; Assumes
;; * `world_inputs` contains fields: `walls`, `bounce`
;; * `motion_settings` contains fields: `p_noise`, `hd_noise`
;; """
;;                                                                                                                                                                                                                                                                                                          @gen (static) function step_model(start :: Pose, c :: Control, world_inputs :: NamedTuple, motion_settings :: NamedTuple) :: Pose
;;                                                                                                                                                                                                                                                                                                          p ~ mvnormal(start.p + c.ds * start.dp, motion_settings.p_noise^2 * [1 0 ; 0 1])
;;                                                                                                                                                                                                                                                                                                                                                                               hd ~ normal(start.hd + c.dhd, motion_settings.hd_noise)
;;                                                                                                                                                                                                                                                                                                                                                                               return physical_step(start.p, p, hd, world_inputs)
;;                                                                                                                                                                                                                                                                                                                                                                               end;

;;                                                                                                                                                                                                                                                                                                                                                                               %% [markdown]
;;                                                                                                                                                                                                                                                                                                                                                                               Returning to the code, we can call a GF like a normal function and it will just run stochastically:

;;                                                                                                                                                                                                                                                                                                                                                                               %%
;;                                                                                                                                                                                                                                                                                                                                                                               motion_settings = (p_noise = 0.5, hd_noise = 2œÄ / 360)

;;                                                                                                                                                                                                                                                                                                                                                                               N_samples = 50
;;                                                                                                                                                                                                                                                                                                                                                                               pose_samples = [start_pose_prior(robot_inputs.start, motion_settings) for _ in 1:N_samples]

;;                                                                                                                                                                                                                                                                                                                                                                               the_plot = plot_world(world, "Start pose prior (samples)")
;;                                                                                                                                                                                                                                                                                                                                                                               plot!(pose_samples; color=:red, label=nothing)
;;                                                                                                                                                                                                                                                                                                                                                                                     savefig("imgs/start_prior")
;;                                                                                                                                                                                                                                                                                                                                                                                     the_plot

;;                                                                                                                                                                                                                                                                                                                                                                                     %%
;;                                                                                                                                                                                                                                                                                                                                                                                     N_samples = 50
;;                                                                                                                                                                                                                                                                                                                                                                                     noiseless_step = robot_inputs.start.p + robot_inputs.controls[1].ds * robot_inputs.start.dp
;;                                                                                                                                                                                                                                                                                                                                                                                     step_samples = [step_model(robot_inputs.start, robot_inputs.controls[1], world_inputs, motion_settings) for _ in 1:N_samples]

;;                                                                                                                                                                                                                                                                                                                                                                                     std_devs_radius = 2

;;                                                                                                                                                                                                                                                                                                                                                                                     the_plot = plot_world(world, "Motion step model model (samples)")
;;                                                                                                                                                                                                                                                                                                                                                                                     plot!(robot_inputs.start; color=:black, label="step from here")
;;                                                                                                                                                                                                                                                                                                                                                                                           plot!([noiseless_step[1]], [noiseless_step[2]];
;;                                                                                                                                                                                                                                                                                                                                                                                                 color=:red, label="$(round(std_devs_radius, digits=2))œÉ region", seriestype=:scatter,
;;                                                                                                                                                                                                                                                                                                                                                                                                 markersize=(20. * std_devs_radius * motion_settings.p_noise), markerstrokewidth=0, alpha=0.25)
;;                                                                                                                                                                                                                                                                                                                                                                                           plot!(step_samples; color=:red, label="step samples")
;;                                                                                                                                                                                                                                                                                                                                                                                                 savefig("imgs/motion_step")
;;                                                                                                                                                                                                                                                                                                                                                                                                 the_plot

;;                                                                                                                                                                                                                                                                                                                                                                                                 %% [markdown]
;;                                                                                                                                                                                                                                                                                                                                                                                                ## Traces: choice maps
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                 We can also perform *traced execution* of a generative function using the construct `Gen.simulate`.  This means that certain information is recorded during execution and packaged into a *trace*, and this trace is returned instead of the bare return value sample.
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                 The foremost information stored in the trace is the *choice map*, which is an associative array from labels to the labeled stochastic choices, i.e. occurrences of the `~` operator, that were encountered.  It is accessed by `Gen.get_choices`:

;;                                                                                                                                                                                                                                                                                                                                                                                                 %%
;;                                                                                                                                                                                                                                                                                                                                                                                                 `simulate` takes the GF plus a tuple of args to pass to it.
;;                                                                                                                                                                                                                                                                                                                                                                                                 trace = simulate(start_pose_prior, (robot_inputs.start, motion_settings))
;;                                                                                                                                                                                                                                                                                                                                                                                                 get_choices(trace)

;;                                                                                                                                                                                                                                                                                                                                                                                                 %% [markdown]
;;                                                                                                                                                                                                                                                                                                                                                                                                 The choice map being the point of focus of the trace in most discussions, we often abusively just speak of a *trace* when we really mean its *choice map*.

;;                                                                                                                                                                                                                                                                                                                                                                                                 %% [markdown]
;;                                                                                                                                                                                                                                                                                                                                                                                                ## Gen.jl API for traces
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                 One can access the primitive choices in a trace using the bracket syntax `trace[address]`.  One can access from a trace the GF that produced it using `Gen.get_gen_fn`, along with with arguments that were supplied using `Gen.get_args`, and the return value sample of the GF using `Gen.get_retval`.  See below the fold for examples of all these.

;;                                                                                                                                                                                                                                                                                                                                                                                                 %%
;;                                                                                                                                                                                                                                                                                                                                                                                                 trace[:p]

;;                                                                                                                                                                                                                                                                                                                                                                                                 %%
;;                                                                                                                                                                                                                                                                                                                                                                                                 trace[:hd]

;;                                                                                                                                                                                                                                                                                                                                                                                                 %%
;;                                                                                                                                                                                                                                                                                                                                                                                                 get_gen_fn(trace)

;;                                                                                                                                                                                                                                                                                                                                                                                                 %%
;;                                                                                                                                                                                                                                                                                                                                                                                                 get_args(trace)

;;                                                                                                                                                                                                                                                                                                                                                                                                 %%
;;                                                                                                                                                                                                                                                                                                                                                                                                 get_retval(trace)

;;                                                                                                                                                                                                                                                                                                                                                                                                 %% [markdown]
;;                                                                                                                                                                                                                                                                                                                                                                                                ## Traces: scores/weights/densities
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                 Traced execution of a generative function also produces a particular kind of score/weight/density.  It is very important to be clear about which score/weight/density value is to be expected, and why.  Consider a generative function of two inputs $x,y$ that flips a coin with weight $p$, and accordingly returns $x$ or $y$.  When $x$ and $y$ are unequal, a sensible reporting of the score/weight/density in the sampling process would produce $p$ or $1-p$ accordingly.  If the user supplied equal values $x = y$, then which score/weight/density should be returned?
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                 One tempting view identifies a GF with a *distribution over its return values*.  In this view, the correct score/weight/density would be $1$.  Pursuing this approach for all GFs requires knowlege of all execution histories that might have produced any output, and then performing a sum over them.  For some small finite situations this may be fine, but this general problem of computing marginalizations is computationally impossible.  (More on this elsewhere, below a fold, or in an exercise?)  Therefore, this is ***not the viewpoint of Gen***, and the score/weight/density being introduced here is a ***different number***.
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                 The only thing a program can reasonably be expected to know is the score/weight/density of its arriving at its return value *via the particular stochastic computation path* that got it there, and the approach of Gen (ProbComp in general?!) is to report this number.  The corresponding mathematical picture imagines GFs as factored into *distributions over choice maps*, whose the score/weight/density is computable, together with deterministic functions on these data that produce the return value from them.  In the toy example, the data of the choice map consists of the sampled Boolean value, its correct score/weight/density is $p$ or $1-p$, accordingly, and its return value function chooses $x$ or $y$, regardless of whether they are equal.
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                 One may still be concerned with the distribution on return values.  This information arises in the aggregate of the sampled stochastic executions that lead to any return value, together with their weights.  (Check that this is true even in this simple example.)  In a sense, when we kick the can of marginalization down the road, we can proceed without difficulty.
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                 The common practice of confusing traces with their choice maps continues here, and we speak of a GF inducing a "distribution over traces".

;;                                                                                                                                                                                                                                                                                                                                                                                                 %% [markdown]
;;                                                                                                                                                                                                                                                                                                                                                                                                 Let's have a look at the score/weight/densities in our running example.
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                 A pose consists of a pair $z = (z_\text p, z_\text{hd})$ where $z_\text p$ is a position vector and $z_\text{hd}$ is an angle.  A control consists of a pair $(s, \eta)$ where $s$ is a distance of displacement and $\eta$ is a change in angle.  Write $u(\theta) = (\cos\theta, \sin\theta)$ for the unit vector in the direction $\theta$.  We are given a "world" $w$ and "motion settings" parameters $\nu = (\nu_\text p, \nu_\text{hd})$.
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                 The models `start_pose_prior` and `step_model` correspond to distributions over their traces, respectively written $\text{start}$ and $\text{step}$.  In both cases these traces consist of the choices at addresses `:p` and `:hd`, so they may be identified with poses $z$ as above.  The distributions are defined as follows, when $y$ is a pose:
;;                                                                                                                                                                                                                                                                                                                                                                                                 * $z \sim \text{start}(y, \nu)$ means that $z_\text p \sim \text{mvnormal}(y_\text p, \nu_\text p^2 I)$ and $z_\text{hd} \sim \text{normal}(y_\text{hd}, \nu_\text{hd})$ independently.
;;                                                                                                                                                                                                                                                                                                                                                                                                 * $z \sim \text{step}(y, (s, \eta), w, \nu)$ means that $z_\text p \sim \text{mvnormal}(y_\text p + s\,u(y_\text{hd}), \nu_\text p^2 I)$ and $z_\text{hd} \sim \text{normal}(y_\text{hd} + \eta, \nu_\text {hd})$ independently.
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                 The return values $\text{retval}(z)$ of these models are obtained from traces $z$ by reducing $z_\text{hd}$ modulo $2\pi$, and in the second case applying collision physics (relative to $w$) to the path from $y_\text p$ to $z_\text p$.  (We invite the reader to imagine if PropComp required us to compute the marginal density of the return value here!)  We have the following closed form for the density functions:
;;                                                                                                                                                                                                                                                                                                                                                                                                 $$\begin{align*}
;;                                                                                                                                                                                                                                                                                                                                                                                                 P_\text{init}(z; y, \nu)
;;                                                                                                                                                                                                                                                                                                                                                                                                                 &= P_\text{mvnormal}(z_\text p; y_\text p, \nu_\text p^2 I)
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                \cdot P_\text{normal}(z_\text{hd}; y_\text{hd}, \nu_\text{hd}), \\
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                               P_\text{step}(z; y, (s, \eta), w, \nu)
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               &= P_\text{mvnormal}(z_\text p; y_\text p + s\,u(y_\text{hd}), \nu_\text p^2 I)
cdot P_\text{normal}(z_\text{hd}; y_\text{hd} + \eta, \nu_\text{hd}).
end{align*}$$
;;
n general, the density of any trace factors as the product of the densities of the individual primitive choices that appear in it.  Since the primitive distributions of the language are equipped with efficient probability density functions, this overall computation is tractable.  It is represented by `Gen.get_score`:


get_score(trace)

;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             %% [markdown]
ubscores/subweights/subdensities
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Instead of (the log of) the product of all the primitive choices made in a trace, one can take the product over just a subset using `Gen.project`.  See below the fold for examples.


project(trace, select())


project(trace, select(:p))


project(trace, select(:hd))

;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             %%
project(trace, select(:p, :hd)) == get_score(trace)

markdown]
odeling a full path
;;
he model contains all information in its trace, rendering its return value redundant.  The the noisy path integration will just be a wrapper around its functionality, extracting what it needs from the trace.
;;
t is worth acknowledging two strange things in the code below: the extra text "`_loop`" in the function name, and the seemingly redundant new parameter `T`.  Both will be addressed in the next section, along with the aforementioned wrapper.



;; Assumes
;; * `robot_inputs` contains fields: `start`, `controls`
;; * `world_inputs` contains fields: `walls`, `bounce`
;; * `motion_settings` contains fields: `p_noise`, `hd_noise`
;; """
gen function path_model_loop(T :: Int, robot_inputs :: NamedTuple, world_inputs :: NamedTuple, motion_settings :: NamedTuple) :: Vector{Pose}
pose = {:initial => :pose} ~ start_pose_prior(robot_inputs.start, motion_settings)

for t in 1:T
pose = {:steps => t => :pose} ~ step_model(pose, robot_inputs.controls[t], world_inputs, motion_settings)
end
end

prefix_address(t :: Int, rest) :: Pair = (t == 1) ? (:initial => rest) : (:steps => (t-1) => rest)
get_path(trace) = [trace[prefix_address(t, :pose)] for t in 1:(get_args(trace)[1]+1)];

markdown]
trace of `path_model_loop` is more interesting than the ones for `start_pose_prior` and `step_model`.  Let's take a look.  (To reduce notebook clutter, we just show the start pose plus the initial 5 timesteps.)


trace = simulate(path_model_loop, (T, robot_inputs, world_inputs, motion_settings))
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             get_selected(get_choices(trace), select((prefix_address(t, :pose) for t in 1:6)...))

markdown]
e find that a choicemap is a tree structure rather than a flat associative array.  Addresses are actually root-to-node paths, which are constructed using the `=>` operator.
;;
oreover, when the source code of a GF applies the `~` operator not to a primitive distribution but to some other generative function, the latter's choice map is included as a subtree rooted at the corresponding node.  That is, the choice map captures the recursive structure of the stochastic locations of the control flow.

markdown]
he corresponding mathematical picture is as follows.  We write $x_{a:b} = (x_a, x_{a+1}, \ldots, x_b)$ to gather items $x_t$ into a vector.
;;
n addition to the previous data, we are given an estimated start pose $r_0$ and controls $r_t = (s_t, \eta_t)$ for $t=1,\ldots,T$.  Then `path_model` corresponds to a distribution over traces denoted $\text{path}$; these traces are identified with vectors, namely, $z_{0:T} \sim \text{path}(r_{0:T}, w, \nu)$ is the same as $z_0 \sim \text{init}(r_0, \nu)$ and $z_t \sim \text{step}(z_{t-1}, r_t, w, \nu)$ for $t=1,\ldots,T$.  Here and henceforth we use the shorthand $\text{step}(z, \ldots) := \text{step}(\text{retval}(z), \ldots)$.  The density function is

text{path}(z_{0:T}; r_{0:T}, w, \nu)
text{init}(z_0; r_0, \nu) \cdot \prod\nolimits_{t=1}^T P_\text{step}(z_t; z_{t-1}, r_t, w, \nu)

where each term, in turn, factors into a product of two (multivariate) normal densities as described above.

markdown]
s our truncation of the example trace above might suggest, visualization is an essential practice in ProbComp.  We could very pass the output of the above `integrate_controls_noisy` to the `plot!` function to have a look at it.  However, we want to get started early in this notebook on a good habit: writing interpretive code for GFs in terms of their traces rather than their return values.  This enables the programmer include the parameters of the model in the display for clarity.


function frames_from_motion_trace(world, title, trace; show_clutters=false, std_devs_radius=2.)
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          T = get_args(trace)[1]
robot_inputs = get_args(trace)[2]
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          poses = get_path(trace)
noiseless_steps = [robot_inputs.start.p, [pose.p + c.ds * pose.dp for (pose, c) in zip(poses, robot_inputs.controls)]...]
motion_settings = get_args(trace)[4]
plots = Vector{Plots.Plot}(undef, T+1)
for t in 1:(T+1)
frame_plot = plot_world(world, title; show_clutters=show_clutters)
plot!(poses[1:t-1]; color=:black, label="past poses")
plot!([noiseless_steps[t][1]], [noiseless_steps[t][2]];
color=:red, label="$(round(std_devs_radius, digits=2))œÉ region", seriestype=:scatter,
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          markersize=(20. * std_devs_radius * motion_settings.p_noise), markerstrokewidth=0, alpha=0.25)
plot!(Pose(trace[prefix_address(t, :pose => :p)], poses[t].hd); color=:red, label="sampled next step")
plots[t] = frame_plot
end
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              return plots
end;


scaled_motion_settings(settings, x) = (p_noise = x * settings.p_noise, hd_noise = x * settings.hd_noise)

samples = 5

ani = Animation()
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              for n in 1:N_samples
scale = 2. * (2.)^(n-N_samples)
trace = simulate(path_model_loop, (T, robot_inputs, world_inputs, scaled_motion_settings(motion_settings, scale)))
frames = frames_from_motion_trace(world, "Motion model (samples)\nnoise factor $(round(scale, digits=3))", trace)
for frame_plot in frames; frame(ani, frame_plot) end
end
gif(ani, "imgs/motion.gif", fps=2)

markdown]
pdating traces, and improving performance using combinators.
;;
he metaprogramming approach of Gen affords the opportunity to explore alternate stochastic execution histories.  Namely, `Gen.update` takes as inputs a trace, together with modifications to its arguments and primitive choice values, and returns an accordingly modified trace.  It also returns (the log of) the ratio of the output trace's density to the input trace's density, together with a precise record of the resulting modifications to the trace.

markdown]
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              In our example, one could, for instance, replace the first step's stochastic choice of heading with a specific value.


trace = simulate(path_model_loop, (T, robot_inputs, world_inputs, motion_settings))
rotated_first_step, rotated_first_step_weight_diff, _, _ =
update(trace,
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     (T, robot_inputs, world_inputs, motion_settings), (NoChange(), NoChange(), NoChange(), NoChange()),
choicemap((:steps => 1 => :pose => :hd, œÄ/2.)))
the_plot = plot_world(world, "Modifying a heading")
plot!(get_path(trace); color=:green, label="Some path")
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            plot!(get_path(rotated_first_step); color=:red, label="With heading at first step modified")
savefig("imgs/modify_trace_1")
the_plot

markdown]
n the above picture, the green path is apparently missing, having been near-completely overdrawn by the red path.  This is because in the execution of the model, the only change in the stochastic choices took place where we specified.  In particular, the stochastic choice of pose at the second step was left unchanged.  This choice was typical relative to the first step's heading in the old trace, and while it is not impossible relative to the first step's heading in the new trace, it is *far unlikelier* under the mulitvariate normal distribution supporting it.  This is the log of how much unlikelier:

;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          %%
rotated_first_step_weight_diff

markdown]
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          One can also modify the arguments to the program.  In our example, we might have on hand a very long list of controls, and we wish to explore the space of paths incrementally in the timestep:


change_only_T = (UnknownChange(), NoChange(), NoChange(), NoChange())

trace = simulate(path_model_loop, (0, robot_inputs, world_inputs, motion_settings))
for t in 1:T
trace, _, _, _ = update(trace, (t, robot_inputs, world_inputs, motion_settings), change_only_T, choicemap())

o something with the trace of the partial path up to time t.

assert has_value(get_choices(trace), :steps => t => :pose => :p)
assert !has_value(get_choices(trace), :steps => (t+1) => :pose => :p)
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          end;

markdown]
his is a good opportunity to introduce some computational complexity considerations.
;;
ecause the dynamic DSL does not understand the loop inside `path_model_loop`, calling `Gen.update` with the new value of `T` requires re-execution of the whole loop.  This means that the update requires $O(T)$ time, and the above code requires $O(T^2)$ time.
;;
ut we humans understand that incrementing the argument `T` simply requires running the loop body once more.  This operation runs in $O(1)$ time, so the outer loop should require only $O(T)$ time.  Gen can intelligently work this way if we encode the structure of Markov chain in this model using a *combinator* for the static DSL, as follows.


gen (static) function motion_path_kernel(t :: Int, state :: Pose, robot_inputs :: NamedTuple, world_inputs :: NamedTuple, motion_settings :: NamedTuple) :: Pose
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          return {:pose} ~ step_model(state, robot_inputs.controls[t], world_inputs, motion_settings)
end
motion_path_chain = Unfold(motion_path_kernel)

;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          @gen (static) function path_model(T :: Int, robot_inputs :: NamedTuple, world_inputs :: NamedTuple, motion_settings :: NamedTuple) :: Vector{Pose}
initial = {:initial => :pose} ~ start_pose_prior(robot_inputs.start, motion_settings)
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {:steps} ~ motion_path_chain(T, initial, robot_inputs, world_inputs, motion_settings)
end;

markdown]
he models `path_model_loop` and `path_model` have been arranged to produce identically structured traces with the same frequencies and return values, and to correspond to identical distributions over traces in the mathematical picture, thereby yielding the same weights.  They give rise to identical computations under `Gen.simulate`, whereas the new model is sometimes more efficient under `Gen.update`.  Here we illustrate the efficiency gain.
;;
he following cell may need to be rerun to fix Julia garbage collection artifacts.)


repeats = 100
robot_inputs_long = (robot_inputs..., controls = reduce(vcat, [robot_inputs.controls for _ in 1:N_repeats]))

time_ends_loop = Vector(undef, T * N_repeats)
time_start = now()
trace = simulate(path_model_loop, (0, robot_inputs_long, world_inputs, motion_settings))
for t in 1:(T * N_repeats)
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          trace, _, _, _ = update(trace, (t, robot_inputs_long, world_inputs, motion_settings), change_only_T, choicemap())
time_ends_loop[t] = now()
end
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          time_diffs_loop = dv.(time_ends_loop - [time_start, time_ends_loop[1:end-1]...])
println("Explicit loop: $(dv(time_ends_loop[end]-time_start))ms")

time_ends_chain = Vector(undef, T * N_repeats)
time_start = now()
trace = simulate(path_model, (0, robot_inputs_long, world_inputs, motion_settings))
for t in 1:(T * N_repeats)
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          trace, _, _, _ = update(trace, (t, robot_inputs_long, world_inputs, motion_settings), change_only_T, choicemap())
time_ends_chain[t] = now()
end
time_diffs_chain = dv.(time_ends_chain - [time_start, time_ends_chain[1:end-1]...])
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          println("Markov chain combinator: $(dv(time_ends_chain[end]-time_start))ms")

the_plot = plot([range(1, T * N_repeats)...], time_diffs_loop; label="Explicit loop", title="Gen.update steps into trace", xlabel="t'th step", ylabel="time (ms)")
plot!([range(1, T * N_repeats)...], time_diffs_chain; label="Markov chain combinator")
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                savefig("imgs/dynamic_static_comparison")
the_plot

markdown]
wing to the efficiency comparison, we eschew `path_model_loop` in favor of `path_model` in what follows.  Thus we finally write our noisy path integration wrapper.



;; Assumes
;; * `robot_inputs` contains fields: `start`, `controls`
;; * `world_inputs` contains fields: `walls`, `bounce`
;; * `motion_settings` contains fields: `p_noise`, `hd_noise`
;; """
function integrate_controls_noisy(robot_inputs :: NamedTuple, world_inputs :: NamedTuple, motion_settings :: NamedTuple) :: Vector{Pose}
return get_path(simulate(path_model, (length(robot_inputs.controls), robot_inputs, world_inputs, motion_settings)))
end;

markdown]
deal sensors
;;
e now, additionally, assume the robot is equipped with sensors that cast rays upon the environment at certain angles relative to the given pose, and return the distance to a hit.
;;
e first describe the ideal case, where the sensors return the true distances to the walls.


function sensor_distance(pose :: Pose, walls :: Vector{Segment}, box_size :: Float64) :: Float64
d = minimum(distance(pose, seg) for seg in walls)
apping to a finite value avoids issues below.
return isinf(d) ? 2. * box_size : d
end;


;; Assumes
;; * `sensor_settings` contains fields: `fov`, `num_angles`
;; """
sensor_angle(sensor_settings :: NamedTuple, j :: Int64) =
sensor_settings.fov * (j - (sensor_settings.num_angles - 1) / 2.) / (sensor_settings.num_angles - 1)


;; Assumes
;; * `sensor_settings` contains fields: `fov`, `num_angles`, `box_size`
;; """
function ideal_sensor(pose :: Pose, walls :: Vector{Segment}, sensor_settings :: NamedTuple) :: Vector{Float64}
readings = Vector{Float64}(undef, sensor_settings.num_angles)
for j in 1:sensor_settings.num_angles
sensor_pose = rotate_pose(pose, sensor_angle(sensor_settings, j))
readings[j] = sensor_distance(sensor_pose, walls, sensor_settings.box_size)
end
return readings
end;


lot sensor data.


;; Assumes
;; * `sensor_settings` contains fields: `fov`, `num_angles`, `box_size`
;; """
function plot_sensors!(pose, color, readings, label, sensor_settings)
plot!([pose.p[1]], [pose.p[2]]; color=color, label=nothing, seriestype=:scatter, markersize=3, markerstrokewidth=0)
projections = [step_along_pose(rotate_pose(pose, sensor_angle(sensor_settings, j)), s) for (j, s) in enumerate(readings)]
plot!(first.(projections), last.(projections);
color=:blue, label=label, seriestype=:scatter, markersize=3, markerstrokewidth=1, alpha=0.25)
plot!([Segment(pose.p, pr) for pr in projections]; color=:blue, label=nothing, alpha=0.25)
end

function frame_from_sensors(world, title, poses, poses_color, poses_label, pose, readings, readings_label, sensor_settings; show_clutters=false)
the_plot = plot_world(world, title; show_clutters=show_clutters)
plot!(poses; color=poses_color, label=poses_label)
plot_sensors!(pose, poses_color, readings, readings_label, sensor_settings)
return the_plot
end;


sensor_settings = (fov = 2œÄ*(2/3), num_angles = 41, box_size = world.box_size)

;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ani = Animation()
for pose in path_integrated
frame_plot = frame_from_sensors(
world, "Ideal sensor distances",
path_integrated, :green2, "some path",
pose, ideal_sensor(pose, world.walls, sensor_settings), "ideal sensors",
sensor_settings)
frame(ani, frame_plot)
end
gif(ani, "imgs/ideal_distances.gif", fps=1)

markdown]
oisy sensors
;;
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  We assume that the sensor readings are themselves uncertain, say, the distances only knowable up to some noise.  We model this as follows.  (We satisfy ourselves with writing a loop in the dynamic DSL because we will have no need for incremental recomputation within this model.)



;; Assumes
;; * `sensor_settings` contains fields: `fov`, `num_angles`, `box_size`, `s_noise`
;; """
gen function sensor_model(pose :: Pose, walls :: Vector{Segment}, sensor_settings :: NamedTuple) :: Vector{Float64}
for j in 1:sensor_settings.num_angles
sensor_pose = rotate_pose(pose, sensor_angle(sensor_settings, j))
{j => :distance} ~ normal(sensor_distance(sensor_pose, walls, sensor_settings.box_size), sensor_settings.s_noise)
end
end

function noisy_sensor(pose :: Pose, walls :: Vector{Segment}, sensor_settings :: NamedTuple) :: Vector{Float64}
trace = simulate(sensor_model, (pose, walls, sensor_settings))
return [trace[j => :distance] for j in 1:sensor_settings.num_angles]
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  end;

markdown]
he trace contains many choices corresponding to directions of sensor reading from the input pose.  To reduce notebook clutter, here we just show a subset of 5 of them:

;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  %%
sensor_settings = (sensor_settings..., s_noise = 0.10)

trace = simulate(sensor_model, (robot_inputs.start, world.walls, sensor_settings))
get_selected(get_choices(trace), select((1:5)...))

markdown]
he mathematical picture is as follows.  Given the parameters of a pose $y$, walls $w$, and settings $\nu$, one gets a distribution $\text{sensor}(y, w, \nu)$ over the traces of `sensor_model`, and when $z$ is a motion model trace we set $\text{sensor}(z, w, \nu) := \text{sensor}(\text{retval}(z), w, \nu)$.  It samples are identified with vectors $o = (o^{(1)}, o^{(2)}, \ldots, o^{(J)})$, where $J := \nu_\text{num\_angles}$, each $o^{(j)}$ independently following a certain normal distribution (depending, notably, on the distance from the pose to the nearest wall).  Thus the density of $o$ factors into a product of the form

text{sensor}(o) = \prod\nolimits_{j=1}^J P_\text{normal}(o^{(j)})

where we begin a habit of omitting the parameters to distributions that are implied by the code.
;;
isualizing the traces of the model is probably more useful for orientation, so we do this now.


dd settings/(hyper)params display code.
function frame_from_sensors_trace(world, title, poses, poses_color, poses_label, pose, trace; show_clutters=false)
readings = [trace[j => :distance] for j in 1:sensor_settings.num_angles]
return frame_from_sensors(world, title, poses, poses_color, poses_label, pose,
readings, "trace sensors", get_args(trace)[3];
show_clutters=show_clutters)
end;


ani = Animation()
for pose in path_integrated
trace = simulate(sensor_model, (pose, world.walls, sensor_settings))
frame_plot = frame_from_sensors_trace(
world, "Sensor model (samples)",
path_integrated, :green2, "some path",
pose, trace)
frame(ani, frame_plot)
end
gif(ani, "imgs/sensor_1.gif", fps=1)

markdown]
ull model
;;
e fold the sensor model into the motion model to form a "full model", which whose traces describe simulations of the entire robot situation as we have described it.



;; Assumes
;; * `robot_inputs` contains fields: `start`
;; * `full_settings` contains fields: `motion_settings`, `sensor_settings`
;;     * `full_settings.motion_settings` contains fields: `p_noise`, `hd_noise`
;;     * `full_settings.sensor_settings` contains fields: `fov`, `num_angles`, `box_size`, `s_noise`
;; """
gen (static) function full_model_initial(robot_inputs :: NamedTuple, walls :: Vector{Segment}, full_settings :: NamedTuple)  :: Pose
pose ~ start_pose_prior(robot_inputs.start, full_settings.motion_settings)
{:sensor} ~ sensor_model(pose, walls, full_settings.sensor_settings)
return pose
end


;; Assumes
;; * `robot_inputs` contains fields: `controls`
;; * `world_inputs` contains fields: `walls`, `bounce`
;; * `full_settings` contains fields: `motion_settings`, `sensor_settings`
;;     * `full_settings.motion_settings` contains fields: `p_noise`, `hd_noise`
;;     * `full_settings.sensor_settings` contains fields: `fov`, `num_angles`, `box_size`, `s_noise`
;; """
gen (static) function full_model_kernel(t :: Int, state :: Pose, robot_inputs :: NamedTuple, world_inputs :: NamedTuple,
full_settings :: NamedTuple) :: Pose
pose ~ step_model(state, robot_inputs.controls[t], world_inputs, full_settings.motion_settings)
{:sensor} ~ sensor_model(pose, world_inputs.walls, full_settings.sensor_settings)
return pose
end
full_model_chain = Unfold(full_model_kernel)


;; Assumes
;; * `robot_inputs` contains fields: `start`, `controls`
;; * `world_inputs` contains fields: `walls`, `bounce`
;; * `full_settings` contains fields: `motion_settings`, `sensor_settings`
;;     * `full_settings.motion_settings` contains fields: `p_noise`, `hd_noise`
;;     * `full_settings.sensor_settings` contains fields: `fov`, `num_angles`, `box_size`, `s_noise`
;; """
gen (static) function full_model(T :: Int, robot_inputs :: NamedTuple, world_inputs :: NamedTuple, full_settings :: NamedTuple) :: Nothing
initial ~ full_model_initial(robot_inputs, world_inputs.walls, full_settings)
steps ~ full_model_chain(T, initial, robot_inputs, world_inputs, full_settings)
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           end

get_sensors(trace) =
trace[prefix_address(t, :sensor => j => :distance)]
for j in 1:get_args(trace)[4].sensor_settings.num_angles]
for t in 1:(get_args(trace)[1]+1)];

markdown]
gain, the trace of the full model contains many choices, so we just show a subset of them: the initial pose plus 2 timesteps, and 5 sensor readings from each.


full_settings = (motion_settings=motion_settings, sensor_settings=sensor_settings)
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           full_model_args = (robot_inputs, world_inputs, full_settings)

trace = simulate(full_model, (T, full_model_args...))
selection = select((prefix_address(t, :pose) for t in 1:3)..., (prefix_address(t, :sensor => j) for t in 1:3, j in 1:5)...)
get_selected(get_choices(trace), selection)

markdown]
n the math picture, `full_model` corresponds to a distribution $\text{full}$ over its traces.  Such a trace is identified with of a pair $(z_{0:T}, o_{0:T})$ where $z_{0:T} \sim \text{path}(\ldots)$ and $o_t \sim \text{sensor}(z_t, \ldots)$ for $t=0,\ldots,T$.  The density of this trace is then
begin{align*}
text{full}(z_{0:T}, o_{0:T})
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           &= P_\text{path}(z_{0:T}) \cdot \prod\nolimits_{t=0}^T P_\text{sensor}(o_t) \\
big(P_\text{init}(z_0)\ P_\text{sensor}(o_0)\big)
cdot \prod\nolimits_{t=1}^T \big(P_\text{step}(z_t)\ P_\text{sensor}(o_t)\big).
end{align*}$$
;;
y this point, visualization is essential.


function frames_from_full_trace(world, title, trace; show_clutters=false, std_devs_radius=2.)
get_args(trace)[1]
robot_inputs = get_args(trace)[2]
poses = get_path(trace)
noiseless_steps = [robot_inputs.start.p, [pose.p + c.ds * pose.dp for (pose, c) in zip(poses, robot_inputs.controls)]...]
settings = get_args(trace)[4]
sensor_readings = get_sensors(trace)
plots = Vector{Plots.Plot}(undef, 2*(T+1))
for t in 1:(T+1)
frame_plot = plot_world(world, title; show_clutters=show_clutters)
plot!(poses[1:t-1]; color=:black, label=nothing)
plot!([noiseless_steps[t][1]], [noiseless_steps[t][2]];
color=:red, label=nothing, seriestype=:scatter,
markersize=(20. * std_devs_radius * settings.motion_settings.p_noise), markerstrokewidth=0, alpha=0.25)
plot!(Pose(trace[prefix_address(t, :pose => :p)], poses[t].hd); color=:red, label=nothing)
plots[2*t-1] = frame_plot
plots[2*t] = frame_from_sensors(
world, title,
poses[1:t], :black, nothing,
poses[t], sensor_readings[t], nothing,
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      settings.sensor_settings; show_clutters=show_clutters)
end
return plots
end;


scaled_full_settings(settings, x) = (settings..., motion_settings=scaled_motion_settings(settings.motion_settings, x))

samples = 5

ani = Animation()
for n in 1:N_samples
scale = 2. * (2.)^(n-N_samples)
;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      trace = simulate(full_model, (T, robot_inputs, world_inputs, scaled_full_settings(full_settings, scale)))
frames = frames_from_full_trace(world, "Full model (samples)\nnoise factor $(round(scale, digits=3))", trace)
for frame_plot in frames; frame(ani, frame_plot) end
end
gif(ani, "imgs/full_1.gif", fps=2)

markdown]
side: abstracting essential features of generative functions, traces, and weights

markdown]
ree structure


gen function example_sub_gf(p)
foo ~ bernoulli(p)
return foo ? "asdf" : -4
end

gen function example_sup_gf(p)
{:call} ~ example_sub_gf(p)
{:bar} ~ normal(0., 1.)
return 7
end

example_trace = simulate(example_sup_gf, (0.5,))
get_choices(example_trace)

markdown]
athy picture
;;

;;
or a particular GF, we call another function a *well-defined function of its traces* if it is a function of traces that invokes only valid choice addresses for every possible stochastic execution of the GF.
;;
ome particular GFs, upon examination, may be determined to only produce traces satisfying certain constraints, so that certain functions of their traces are valid for all possible stochastic executions.  (For a conservative example, certain addresses might always exist, and the function might extract only these choices from the traces.)  We call the latter function a *well-defined function on traces* of the former GF.]
;;
generative function in Gen can be mathematically modeled as specifying a probability distribution over the space of all traces, with some subset thereof as its support.  A well-defined function of its traces then corresponds to a random variable.
;;
;;
;;
enerally, if $P$ is a distribution depending on parameters $\theta$, then we write $P(z; \theta)$ for the probability density associated to the value $z$, and we write $z \sim P(\cdot\,; \theta)$ to declare that the value $z$ has been sampled according to these densities.  Thus the semicolon delimits general parameters.  When parameters are fixed and understood from context, we may delete them and write, say, $P(z)$ or $z \sim P(\cdot)$.
;;
;;

markdown]
he data
;;
et us generate some fixed synthetic motion data that, for pedagogical purposes, we will work with as if it were the actual path of the robot.  We will generate two versions, one each with low or high motion deviation.

;;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               %%
motion_settings_low_deviation = (p_noise = 0.05, hd_noise = (1/10.) * 2œÄ / 360)
trace_low_deviation = simulate(full_model, (T, robot_inputs, world_inputs, (full_settings..., motion_settings=motion_settings_low_deviation)))

motion_settings_high_deviation = (p_noise = 0.25, hd_noise = 2œÄ / 360)
trace_high_deviation = simulate(full_model, (T, robot_inputs, world_inputs, (full_settings..., motion_settings=motion_settings_high_deviation)))

frames_low = frames_from_full_trace(world, "Low motion deviation", trace_low_deviation)
frames_high = frames_from_full_trace(world, "High motion deviation", trace_high_deviation)
ani = Animation()
for (low, high) in zip(frames_low, frames_high)
frame_plot = plot(low, high; size=(1000,500), plot_title="Fixed synthetic data")
frame(ani, frame_plot)
end
gif(ani, "imgs/the_data.gif", fps=2)

markdown]
ince we imagine these data as having been recorded from the real world, keep only their extracted data, *discarding* the traces that produced them.


hese are are what we hope to recover...
path_low_deviation = get_path(trace_low_deviation)
path_high_deviation = get_path(trace_high_deviation)

using these data.
observations_low_deviation = get_sensors(trace_low_deviation)
observations_high_deviation = get_sensors(trace_high_deviation);

markdown]
e summarize the information available to the robot to determine its location.  On the one hand, one has guess of the start pose plus some controls, which one might integrate to produce an idealized guess of path.  On the other hand, one has the sensor data.


;; function plot_bare_sensors(world, title, readings, label, sensor_settings)
;;     border = world.box_size * (3.)/19.
;;     the_plot = plot(
;;         size         = (500, 500),
;;         aspect_ratio = :equal,
;;         grid         = false,
;;         xlim         = (world.bounding_box[1]-border, world.bounding_box[2]+border),
;;         ylim         = (world.bounding_box[3]-border, world.bounding_box[4]+border),
;;         title        = title,
;;         legend       = :bottomleft)
;;     plot_sensors!(Pose(world.center_point, 0.), :black, readings, label, sensor_settings)
;;     return the_plot
;; end;

;; %%
;; short_control(c) = "ds = $(round(c.ds, digits=2)), dhd = $(round(c.dhd, digits=2))"

;; ani = Animation()
;; for (t, (pose, readings_low, readings_high)) in enumerate(zip(path_integrated, observations_low_deviation, observations_high_deviation))
;;     plot_integrated = plot_world(world, "Startup data")
;;     plot!(path_integrated[1]; color=:green, label="start guess")
;;     if t > 1; annotate!(5, 2.5, "Control $(t-1):\n$(short_control(robot_inputs.controls[t-1]))") end

;;     plot_low = plot_bare_sensors(world, "Low motion deviation", readings_low, "fixed sensor data", sensor_settings)
;;     plot!(Pose(world.center_point, 0.0); color=:black, label=nothing)

;;     plot_high = plot_bare_sensors(world, "High motion deviation", readings_high, "fixed sensor data", sensor_settings)
;;     plot!(Pose(world.center_point, 0.0); color=:black, label=nothing)

;;     the_frame = plot(plot_integrated, plot_low, plot_high; size=(1500,500), layout=grid(1,3), plot_title="<‚Äî Data available to robot ‚Äî>")
;;     frame(ani, the_frame)
;; end
;; gif(ani, "imgs/robot_can_see.gif", fps=2)

;; %% [markdown]
;;# Why we need inference

;; %% [markdown]
;;## In a picture
;;
;; The path obtained by integrating the controls serves as a proposal for the true path, but it is unsatisfactory, especially in the high motion deviation case.  The picture gives an intuitive sense of the fit:

;; %%
;; ani = Animation()
;; for (pose, readings_low, readings_high) in zip(path_integrated, observations_low_deviation, observations_high_deviation)
;;     low_plot = frame_from_sensors(
;;         world, "Low motion deviation",
;;         path_integrated, :green2, "path from integrating controls",
;;         pose, readings_low, "fixed sensor data",
;;         sensor_settings)
;;     high_plot = frame_from_sensors(
;;         world, "High motion deviation",
;;         path_integrated, :green2, "path from integrating controls",
;;         pose, readings_high, "fixed sensor data",
;;         sensor_settings)
;;     frame_plot = plot(low_plot, high_plot; size=(1000,500), plot_title="Integrated path as explanation of sensor data")
;;     frame(ani, frame_plot)
;; end
;; gif(ani, "imgs/need.gif", fps=1)

;; %% [markdown]
;; It would seem that the fit is reasonable in low motion deviation, but really breaks down in high motion deviation.
;;
;; We are not limited to intuitive judgments here: the model can quantitatively tell us how good a fit it is for the data.  Namely, we can compare the likelihoods of the observation data in typical samples produced by the model, to the likelihoods of our fixed observation data under samples from the model agreeing these data.
;;
;; In order to do this, we detour to explain how to produce samples from our model that agree with the fixed observation data.

;; %% [markdown]
;;## Generating samples with constraints
;;
;; We have seen how `Gen.simulate` performs traced execution of a generative function: as the program runs, it draws stochastic choices from all required primitive distributions, and records them in a choice map.
;;
;; The operation `Gen.generate` performs a generalization of this process.  One also provides a choice map of *constraints* that declare fixed values for some of these primitive choices.  As the program runs, any primitive choice that has been named by the constraints is deterministically given the specified value, and otherwise it is drawn stochastically as in `Gen.simulate`.
;;
;; The trace resulting from a call to `Gen.generate` is indistinguishable from `Gen.simulate`, having the same kind of choice map, in turn having the same assignments of densities to its nodes according to the primitive distributions.  But there is a key situational difference: the total density is *no longer equal to* the frequency with which the trace stochastically occurs under the model.
;;
;; RATIO IS THE IMPORTANCE WEIGHT, EQUALS PROJECT OF CONSTRAINT ADDRESSES IN RESULTING TRACE, AND IS ALSO RETURNED.

;; %% [markdown]
;;## Picturing generated samples

;; %%
;; Encode sensor readings into choice map.

;; constraint_from_sensors(t :: Int, readings :: Vector{Float64}) :: ChoiceMap =
;;     choicemap(( (prefix_address(t, :sensor => j => :distance), reading) for (j, reading) in enumerate(readings) )...)
;; constraint_from_sensors(tuple :: Tuple) = constraint_from_sensors(tuple...);

;; %%
;; N_samples = 200

;; selection = select((prefix_address(i, :sensor => j => :distance) for i in 1:(T+1), j in 1:sensor_settings.num_angles)...)
;; traces_typical = [simulate(full_model, (T, full_model_args...)) for _ in 1:N_samples]
;; log_likelihoods_typical = [project(trace, selection) for trace in traces_typical]
;; hist_typical = histogram(log_likelihoods_typical; label=nothing, bins=20, title="typical data")

;; constraints_low_deviation = constraint_from_sensors.(enumerate(observations_low_deviation))
;; merged_constraints_low_deviation = merge(constraints_low_deviation...)
;; traces_generated_low_deviation = [generate(full_model, (T, full_model_args...), merged_constraints_low_deviation)[1] for _ in 1:N_samples]
;; log_likelihoods_low_deviation = [project(trace, selection) for trace in traces_generated_low_deviation]
;; hist_low_deviation = histogram(log_likelihoods_low_deviation; label=nothing, bins=20, title="low dev data")

;; constraints_high_deviation = constraint_from_sensors.(enumerate(observations_high_deviation))
;; merged_constraints_high_deviation = merge(constraints_high_deviation...)
;; traces_generated_high_deviation = [generate(full_model, (T, full_model_args...), merged_constraints_high_deviation)[1] for _ in 1:N_samples]
;; log_likelihoods_high_deviation = [project(trace, selection) for trace in traces_generated_high_deviation]
;; hist_high_deviation = histogram(log_likelihoods_high_deviation; label=nothing, bins=20, title="high dev data")

;; the_plot = plot(hist_typical, hist_low_deviation, hist_high_deviation; size=(1500,500), layout=grid(1,3), plot_title="Log likelihood of observations under the model")
;; savefig("imgs/likelihoods")
;; the_plot

;; %% [markdown]
;; Note the differences in scales along the bottom.

;; %% [markdown]
;;# Inference: main idea
;;
;; In the viewpoint of ProbComp, the goal of *inference* is to produce *likely* traces of a full model, given the observed data.  In other words, as generative functions induce distributions on traces, and if we view the full model as a program embodying a *prior*, then applying an inference metaprogram to it (together with the observed data) produces a new program that embodies the *posterior*.

;; %% [markdown]
;; Mathematically, the passage from the prior to the posterior is the operation of conditioning distributions.  Namely, one defines first the *marginal distribution* over observations to have density
;; $$
;; P_\text{full}(o_{0:T})
;; := \int P_\text{full}(Z_{0:T}, o_{0:T}) \, dZ_{0:T}
;;  = \mathbf{E}_{Z_{0:T} \sim \text{path}}\big[P_\text{full}(Z_{0:T}, o_{0:T})\big],
;; $$
;; and then the *conditional distribution* has density
;; $$
;; P_\text{full}(z_{0:T} | o_{0:T}) := \frac{P_\text{full}(z_{0:T}, o_{0:T})}{P_\text{full}(o_{0:T})}.
;; $$
;; The goal of inference is to produce samples $\text{trace}_{0:T}$ distributed approximately according to the latter distribution.

;; %% [markdown]
;; Let's show what we mean with a picture.  The following short code, which we treat as a *black box* for the present purposes, very mildly exploits the model structure to bring the samples much closer to the true path.

;; %%
;; The code in this cell is the black box!

;; Propose a move for MH.

;; @gen function drift_proposal(trace, drift_step_factor)
;;     t = get_args(trace)[1] + 1

;;     p_noise = get_args(trace)[4].motion_settings.p_noise
;;     hd_noise = get_args(trace)[4].motion_settings.hd_noise

;;     p = trace[prefix_address(t, :pose => :p)]
;;     hd = trace[prefix_address(t, :pose => :hd)]

;;     Form expected by `mh` in library code, immediately following.
;;     fwd_p = {prefix_address(t, :pose => :p)} ~ mvnormal(p, drift_step_factor * p_noise^2 * [1 0 ; 0 1])
;;     fwd_hd = {prefix_address(t, :pose => :hd)} ~ normal(hd, hd_noise)

;;     Form expected by `mh_step`, further below.
;;     return (choicemap((prefix_address(t, :pose => :p), fwd_p), (prefix_address(t, :pose => :hd), fwd_hd)),
;;             choicemap((prefix_address(t, :pose => :p), p), (prefix_address(t, :pose => :hd), hd)))
;; end

;; PF with rejuvenation, using `GenParticleFilters` library code for the generic parts.

;; function particle_filter_rejuv_library(model, T, args, constraints, N_particles, N_MH, MH_proposal, MH_proposal_args)
;;     state = pf_initialize(model, (0, args...), constraints[1], N_particles)
;;     for t in 1:T
;;         pf_resample!(state)
;;         pf_rejuvenate!(state, mh, (MH_proposal, MH_proposal_args), N_MH)
;;         pf_update!(state, (t, args...), change_only_T, constraints[t+1])
;;     end
;;     return state.traces, state.log_weights
;; end

;; Run PF and return one of its particles.

;; function sample(particles, log_weights)
;;     log_total_weight = logsumexp(log_weights)
;;     norm_weights = exp.(log_weights .- log_total_weight)
;;     index = categorical(norm_weights)
;;     return particles[index], log_weights[index]
;; end

;; function sample_from_posterior(model, T, args, constraints; N_MH = 10, N_particles = 10)
;;     drift_step_factor = 1/3.
;;     return sample(particle_filter_rejuv_library(model, T, args, constraints, N_particles, N_MH, drift_proposal, (drift_step_factor,))...)
;; end;

;; %%
;; Visualize distributions over traces.

;; function frame_from_traces(world, title, path_actual, traces, trace_label; show_clutters=false)
;;     the_plot = plot_world(world, title; show_clutters=show_clutters)
;;     if !isnothing(path_actual); plot!(path_actual; label="actual path", color=:brown) end
;;     for trace in traces
;;         poses = get_path(trace)
;;         plot!([p.p[1] for p in poses], [p.p[2] for p in poses]; label=nothing, color=:green, alpha=0.3)
;;         plot!(Segment.(zip(poses[1:end-1], poses[2:end]));
;;               label=trace_label, color=:green, seriestype=:scatter, markersize=3, markerstrokewidth=0, alpha=0.3)
;;         trace_label = nothing
;;     end
;;     return the_plot
;; end;

;; %% [markdown]
;; Here is a visual comparison.

;; %%
;; N_samples = 10

;; traces = [simulate(full_model, (T, full_model_args...)) for _ in 1:N_samples]
;; prior_plot = frame_from_traces(world, "Prior on robot paths", nothing, traces, "prior samples")

;; traces = [sample_from_posterior(full_model, T, full_model_args, constraints_low_deviation)[1] for _ in 1:N_samples]
;; posterior_plot_low_deviation = frame_from_traces(world, "Low dev observations", path_low_deviation, traces, "posterior samples")

;; traces = [sample_from_posterior(full_model, T, full_model_args, constraints_high_deviation)[1] for _ in 1:N_samples]
;; posterior_plot_high_deviation = frame_from_traces(world, "High dev observations", path_high_deviation, traces, "posterior samples")

;; the_plot = plot(prior_plot, posterior_plot_low_deviation, posterior_plot_high_deviation; size=(1500,500), layout=grid(1,3), plot_title="Prior vs. posteriors")
;; savefig("imgs/prior_posterior")
;; the_plot

;; %% [markdown]
;; Numerical comparison

;; %%
;; N_samples = 100

;; selection = select((prefix_address(i, :sensor => j => :distance) for i in 1:(T+1), j in 1:sensor_settings.num_angles)...)
;; traces_typical = [simulate(full_model, (T, full_model_args...)) for _ in 1:N_samples]
;; log_likelihoods_typical = [project(trace, selection) for trace in traces_typical]
;; hist_typical = histogram(log_likelihoods_typical; label=nothing, bins=20, title="typical data under prior")

;; traces_posterior_low_deviation = [sample_from_posterior(full_model, T, full_model_args, constraints_low_deviation; N_MH=10, N_particles=10)[1] for _ in 1:N_samples]
;; log_likelihoods_low_deviation = [project(trace, selection) for trace in traces_posterior_low_deviation]
;; hist_low_deviation = histogram(log_likelihoods_low_deviation; label=nothing, bins=20, title="typical data under posterior: low dev data")

;; traces_posterior_high_deviation = [sample_from_posterior(full_model, T, full_model_args, constraints_high_deviation; N_MH=10, N_particles=10)[1] for _ in 1:N_samples]
;; log_likelihoods_high_deviation = [project(trace, selection) for trace in traces_posterior_high_deviation]
;; hist_high_deviation = histogram(log_likelihoods_high_deviation; label=nothing, bins=20, title="typical data under posterior: high dev data")

;; the_plot = plot(hist_typical, hist_low_deviation, hist_high_deviation; size=(1500,500), layout=grid(1,3), plot_title="Log likelihood of observations")
;; savefig("imgs/likelihoods")
;; the_plot

;; %% [markdown]
;;# Generic strategies for inference
;;
;; We now spell out some generic strategies for conditioning the ouputs of our model towards the observed sensor data.  The word "generic" indicates that they make no special intelligent use of the model structure, and their convergence is guaranteed by theorems of a similar nature.
;;
;; There is no free lunch in this game: generic inference recipies are inefficient, for example, converging very slowly or needing vast counts of particles, especially in high-dimensional settings.  Rather, efficiency will later become possible when we exploit what we actually know about the problem in our design of the inference strategy.  Gen's aim is to provide the right entry points to enact this exploitation.

;; %% [markdown]
;;## Deeper functionality of GFs
;;
;; Rif asks: maybe these discussions are too simplified?
;;
;; Traced execution of generative functions, via `Gen.simulate` as seen above, is a straightforward alternative semantic interpretation.  A more refined operation, `Gen.generate`, allows two deeper features.
;;
;; 1. It proposes traces satisfying optional *constraints*.
;; Note that the `get_choices(trace)` returns a tree with nodes at all invokations of `~` to sample from generative functions.  The *leaf* nodes correspond to *primitive choices* coming from honest *distributions*.  Presently, Gen only works with constraints upon these *primitive* choices.  The constraints are recorded in structures called *choice maps*, as modified in the black box code cell above.
;;
;; 2. It returns the proposed trace along with a *(log) weight*, which we then use in our inference strategies.
;; The meaning of this weight is complex:  The trace proposal code need not produce traces with frequencies according to the "actual" distribution represented by the function‚Äîit is allowed to do something simpler and more computationally efficient.  The weight represents any difference between the proposal frequencies and the "actual" frequencies, plus contributions arising from any imposed constraints.
;;
;; Along the same lines, given a trace, one may perform simple modifications of it using `Gen.update` without rerunning the entire GF, and it returns along with the new trace the difference in weights.
